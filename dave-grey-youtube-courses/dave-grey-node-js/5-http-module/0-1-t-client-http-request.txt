- CLIENT REQUEST: is an HTTP REQUEST made to the SERVER with the following INFO 

    1) REQUEST METHOD: what is the type of http reques that is send by the client... like 

      - get
      - post
      - put
      - delete

    2) REQUEST URL: is the url that we TYPE INSIDE THE BROWSER

      ** this URL is the ENDPOINT in the SERVER 

      ***** if there is NO ENDPOINT in the server same as the URL TYPED in the browser.... then the request will fail

    3) REQUEST BODY: for HTTP REQUESTS like PUT or POST.... the http request contains DATA to be send to the server.... this data is included in the REQUEST BODY

      ** GET and DELETE http requests has NO REQUEST BODY

    4) REQUEST HEADERS: it provides ADDITIONAL INFO about the send http request such as 

      - CONTENT-TYPE: 

          ** mainly used to indicate the DATA TYPE inside the BODY of HTTP REQUEST like PUT, POST, PATCH.

          ** GET and DELETE request had NO REQUEST BODY... BUT USE content-type HEADER if an API ENDPOINT has rules to use it.... it can be ALSO USED to SET THE DATA TYPE of the RESPONSE that it get from the SERVER

          ** content type values for various types of data

           - "text/html": Used for HTML web pages

           - "application/json": Used for JSON-encoded data.

           - "application/xml": Used for XML-encoded data.

           - "image/jpeg": Used for JPEG image files.

           - "audio/mp3": Used for MP3 audio files.

           - "video/mp4": Used for MP4 video files.

           - "application/pdf": Used for PDF files.

           - "application/octet-stream": Used for binary data or unknown file types.

           - "application/json;charser=utf-8" : to set json response with a charset value

      - AUTHORISATION: is a header used to send authentication creadentials such as USERNAME & PASSWORD to the server

        ** if client want to access an API... we need to provide BEARER TOKEN or API KEY inside the AUTHORIZATION HEADER

        ** BEARER TOKEN can be generated by JWT


      - USER AGENT: is a string that has the SOFTWARE AND HARDWARE details of the DEVICE AND BROWSER which is used to make CLIENT REQUESET 

        eg: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36

          ** In this example, the user-agent string includes information about the operating system (Windows NT 10.0), the browser (Chrome/89.0.4389.82), and the rendering engine (AppleWebKit/537.36).

  ** example of an CLIENT HTTP REQUEST 

      POST /api/users HTTP/1.1
      Host: example.com
      Content-Type: application/json
      Authorization: Bearer eyJhl1kdlfj

      {
        "name": "John Doe",
        "email": "johndoe@example.com"
      }

        ** POST /api/users HTTP/1.1 >> specifies HTTP METHOD and URL 

        ** Host: example.com >> server address

        ** Content-Type: application/json: DATA TYPE of the REQUEST BODY 

        ** Authorization: Bearer abc123: a bearer token ??  

        ** the data in {} is the data send to the server using REQUEST BODY

** CLIENT HTTP HEADER ANALOGY: http header is like additional details in a POST LETTER like SENDER and DELIVERY ADDRESS.... while the REQUEST BODY is the LETTER inside the envelop.

** CLIENT can use FETCH API or AXIOS LIBRARY to handle the CLIENT REQUEST and SERVER RESPONSE inside the client

